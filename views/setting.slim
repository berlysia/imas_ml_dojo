.page-header
  h1 設定
#content
  form.form-horizontal action='/setting' method='post'
    .form-group
      label.col-sm-4.control-label for='levelborder' レベル下限（0でリセット）
      .col-sm-6
        input.form-control type='number' name='levelborder' id='levelborder' value="#{@levelborder}"
    .form-group
      label.col-sm-4.control-label for='valueborder' 発揮値上限（0でリセット）
      .col-sm-6
        input.form-control type='number' name='valueborder' id='valueborder' value="#{@valueborder}"
    .form-group
      label.col-sm-4.control-label for='showcount' 表示数（0でリセット）
      .col-sm-6
        input.form-control type='number' name='showcount' id='showcount' value="#{@showcount}"
    .form-group#setting-target
      label.col-sm-4.control-label for='target' 表示先指定
      .col-sm-6
        .radio
          label
            input type='radio' name='target[]' id='target-same' value="same"
            = '同一タブ'
        .radio
          label
            input type='radio' name='target[]' id='target-unique' value="unique"
            = '毎回別のタブ（デフォルト）'
        .radio
          label
            input type='radio' name='target[]' id='target-reuse' value="reuse"
            = '別のタブを開き、以後上書き'
    .form-group#setting-sort
      label.col-sm-4.control-label for='sort' 巡回リストの順序
      .col-sm-6
        .radio
          label
            input type='radio' name='sort[]' id='random' value="random"
            = 'シャッフル（デフォルト）'
        .radio
          label
            input type='radio' name='sort[]' id='descend' value="descend"
            = '降順、大きい順'
        .radio
          label
            input type='radio' name='sort[]' id='ascend' value="ascend"
            = '昇順、小さい順'
    .form-group
      .col-sm-offset-4.col-sm-3
        button.btn.btn-primary type='submit' save changes
      .col-sm-3
        button.btn.btn-danger type='submit' name='delete' value='delete' clear settings
  form.form-horizontal
    .form-group
      .col-sm-offset-4
        button.btn onclick="resetStorage();" 訪問状況リセット


  javascript:

    (function(){
      if(document.cookie){
        var target = '';
        var sort = '';
        var cookies = document.cookie.split('; ');
        for(var i = cookies.length - 1; i >= 0; i--){
          var cookieHash = cookies[i].split('=');
          if(cookieHash[0] == 'target') target = cookieHash[1];
          if(cookieHash[0] == 'sort') sort = cookieHash[1];
        }

        var targetRadio = document.querySelector('#setting-target input[type="radio"][value="'+target+'"]');
        if(targetRadio){
          targetRadio.checked = true;
        }else{
          document.querySelector('#setting-target input[type="radio"][value="unique"]').checked = true;
        }

        var sortRadio = document.querySelector('#setting-sort input[type="radio"][value="'+sort+'"]');
        if(sortRadio){
          sortRadio.checked = true;
        }else{
          document.querySelector('#setting-sort input[type="radio"][value="random"]').checked = true;
        }

      }
    })();

    var resetStorage = function(){
      localStorage.dojo = JSON.stringify({ids:[], date:(new Date()/1000/3600+9)/24|0});
    }
